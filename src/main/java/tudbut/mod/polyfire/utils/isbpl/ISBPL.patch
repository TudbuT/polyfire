--- ISBPL.java.original	2022-04-19 15:18:27.465000000 +0200
+++ ISBPL.java	2022-04-19 16:38:49.516811029 +0200
@@ -1,14 +1,13 @@
+package tudbut.mod.polyfire.utils.isbpl;
+
+import tudbut.mod.polyfire.PolyFire;
+
 import java.io.*;
 import java.lang.reflect.*;
 import java.net.BindException;
 import java.net.ServerSocket;
 import java.net.Socket;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.LinkedList;
-import java.util.Stack;
-import java.util.Queue;
+import java.util.*;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.function.Supplier;
 
@@ -963,7 +962,9 @@
             }
             if (clazz.isEnum()) {
                 for (Object o : clazz.getEnumConstants()) {
-                    addFunction(type, o.toString(), stack -> {
+                    String name = TTC.obfMap.get(clazz.getName().replaceAll("\\.", "/") + "/" + o.toString(), o.toString());
+                    name = name.substring(name.lastIndexOf('/') + 1);
+                    addFunction(type, name, stack -> {
                         if(debug)
                             System.err.println("Java GetEnum: " + o);
                         stack.push(toISBPL(o));
@@ -971,7 +972,9 @@
                 }
             }
             for (Field field : clazz.getDeclaredFields()) {
-                addFunction(type, field.getName(), stack -> {
+                String name = TTC.obfMap.get(clazz.getName().replaceAll("\\.", "/") + "/" + field.getName(), field.getName());
+                name = name.substring(name.lastIndexOf('/') + 1);
+                addFunction(type, name, stack -> {
                     field.setAccessible(true);
                     if(debug)
                         System.err.println("Java Get: " + field);
@@ -981,7 +984,7 @@
                     catch (IllegalAccessException ignored) {
                     }
                 });
-                addFunction(type, "=" + field.getName(), stack -> {
+                addFunction(type, "=" + name, stack -> {
                     field.setAccessible(true);
                     if(debug)
                         System.err.println("Java Set: " + field);
@@ -993,7 +996,9 @@
                 });
             }
             for (Method method : clazz.getDeclaredMethods()) {
-                addFunction(type, method.getName() + method.getParameterCount(), stack -> {
+                String name = TTC.obfMap.get(clazz.getName().replaceAll("\\.", "/") + "/" + method.getName(), method.getName());
+                name = name.substring(name.lastIndexOf('/') + 1);
+                addFunction(type, name + method.getParameterCount(), stack -> {
                     method.setAccessible(true);
                     Object o = stack.pop().object;
                     Object[] params = new Object[method.getParameterCount()];
@@ -1097,7 +1102,7 @@
                 if (filepath.startsWith("/"))
                     break processPath;
                 if (filepath.startsWith("#")) {
-                    filepath = System.getenv().getOrDefault("ISBPL_PATH", "/usr/lib/isbpl") + "/" + filepath.substring(1);
+                    filepath = "config/ttc/isbpl/" + filepath.substring(1);
                     break processPath;
                 }
                 filepath = f.getParentFile().getAbsolutePath() + "/" + filepath;
@@ -1394,7 +1399,7 @@
         return new ISBPLObject(isbpl.getType("array"), array);
     }
     
-    private static String readFile(File f) throws IOException {
+    static String readFile(File f) throws IOException {
         FileInputStream fis = new FileInputStream(f);
         ByteArrayOutputStream bytes = new ByteArrayOutputStream();
         byte[] currentBytes = new byte[4096];
